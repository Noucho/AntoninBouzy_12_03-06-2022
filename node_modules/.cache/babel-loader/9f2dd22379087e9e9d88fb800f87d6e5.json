{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouzy\\\\Desktop\\\\AntoninBouzy_12_03-06-22\\\\src\\\\components\\\\BarChart\\\\BarChart.js\",\n    _s = $RefreshSig$();\n\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar, ResponsiveContainer } from 'recharts';\nimport CustomTooltip from './CustomTooltip';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n/**\n * A bar chart showing user activity, builded with recharts.\n * @Component\n * @param {*} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RenderBarChart(props) {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    setData(props.activity);\n  }, [props.activity]); // The loop changes the dates in numbers to match with the figma model\n\n  for (let i = 0; i < (data === null || data === void 0 ? void 0 : data.length); i++) {\n    data[i].day = [1, 2, 3, 4, 5, 6, 7];\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 272,\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: data,\n      barCategoryGap: \"27\",\n      barGap: \"8\",\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3\",\n        vertical: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"day\",\n        tickMargin: \"15\",\n        tickLine: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        orientation: \"right\",\n        axisLine: false,\n        tickMargin: \"30\",\n        domain: [0, 400],\n        ticks: [0, 200, 400],\n        tickLine: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        width: \"277\",\n        iconType: \"circle\",\n        align: \"right\",\n        verticalAlign: \"top\",\n        iconSize: \"8\",\n        wrapperStyle: {\n          padding: '0 0 50px 0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        name: \"Poids (kg)\",\n        dataKey: \"kilogram\",\n        fill: \"#282D30\",\n        radius: [10, 10, 0, 0],\n        barSize: 7,\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        name: \"Calories br\\xFBl\\xE9es (kCal)\",\n        dataKey: \"calories\",\n        fill: \"#E60000\",\n        radius: [10, 10, 0, 0],\n        barSize: 7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RenderBarChart, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = RenderBarChart;\nRenderBarChart.propTypes = {\n  activity: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderBarChart\");","map":{"version":3,"sources":["C:/Users/bouzy/Desktop/AntoninBouzy_12_03-06-22/src/components/BarChart/BarChart.js"],"names":["BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Bar","ResponsiveContainer","CustomTooltip","useState","useEffect","PropTypes","RenderBarChart","props","data","setData","activity","i","length","day","padding","propTypes","array"],"mappings":";;;AAAA,SACEA,QADF,EAEEC,aAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,GAPF,EAQEC,mBARF,QASO,UATP;AAUA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACF,KAAK,CAACG,QAAP,CAAP;AACD,GAFQ,EAEN,CAACH,KAAK,CAACG,QAAP,CAFM,CAAT,CAH4C,CAO5C;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,MAAT,CAAjB,EAAkCD,CAAC,EAAnC,EAAuC;AACrCH,IAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQE,GAAR,GAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAd;AACD;;AAED,sBACE,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAE,GAA1C;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEL,IAAhB;AAAsB,MAAA,cAAc,EAAC,IAArC;AAA0C,MAAA,MAAM,EAAC,GAAjD;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,eAAe,EAAC,GAA/B;AAAmC,QAAA,QAAQ,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,KAAf;AAAqB,QAAA,UAAU,EAAC,IAAhC;AAAqC,QAAA,QAAQ,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,QAAQ,EAAE,KAFZ;AAGE,QAAA,UAAU,EAAC,IAHb;AAIE,QAAA,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ,CAJV;AAKE,QAAA,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,CALT;AAME,QAAA,QAAQ,EAAE;AANZ;AAAA;AAAA;AAAA;AAAA,cAHF,eAWE,QAAC,OAAD;AAAS,QAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,QAAQ,EAAC,QAFX;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,aAAa,EAAC,KAJhB;AAKE,QAAA,QAAQ,EAAC,GALX;AAME,QAAA,YAAY,EAAE;AACZM,UAAAA,OAAO,EAAE;AADG;AANhB;AAAA;AAAA;AAAA;AAAA,cAZF,eAsBE,QAAC,GAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,CAJV;AAKE,QAAA,OAAO,EAAE,CALX;AAME,QAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA,cAtBF,eA8BE,QAAC,GAAD;AACE,QAAA,IAAI,EAAC,+BADP;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,CAJV;AAKE,QAAA,OAAO,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GAtDuBR,c;;KAAAA,c;AAwDxBA,cAAc,CAACS,SAAf,GAA2B;AACzBL,EAAAA,QAAQ,EAAEL,SAAS,CAACW;AADK,CAA3B","sourcesContent":["import {\n  BarChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar,\n  ResponsiveContainer,\n} from 'recharts'\nimport CustomTooltip from './CustomTooltip'\nimport { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * A bar chart showing user activity, builded with recharts.\n * @Component\n * @param {*} props\n */\n\nexport default function RenderBarChart(props) {\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    setData(props.activity)\n  }, [props.activity])\n\n  // The loop changes the dates in numbers to match with the figma model\n  for (let i = 0; i < data?.length; i++) {\n    data[i].day = [1, 2, 3, 4, 5, 6, 7]\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={272}>\n      <BarChart data={data} barCategoryGap=\"27\" barGap=\"8\">\n        <CartesianGrid strokeDasharray=\"3\" vertical={false} />\n        <XAxis dataKey=\"day\" tickMargin=\"15\" tickLine={false} />\n        <YAxis\n          orientation=\"right\"\n          axisLine={false}\n          tickMargin=\"30\"\n          domain={[0, 400]}\n          ticks={[0, 200, 400]}\n          tickLine={false}\n        />\n        <Tooltip content={<CustomTooltip />} />\n        <Legend\n          width=\"277\"\n          iconType=\"circle\"\n          align=\"right\"\n          verticalAlign=\"top\"\n          iconSize=\"8\"\n          wrapperStyle={{\n            padding: '0 0 50px 0',\n          }}\n        />\n        <Bar\n          name=\"Poids (kg)\"\n          dataKey=\"kilogram\"\n          fill=\"#282D30\"\n          radius={[10, 10, 0, 0]}\n          barSize={7}\n          type=\"date\"\n        />\n        <Bar\n          name=\"Calories brûlées (kCal)\"\n          dataKey=\"calories\"\n          fill=\"#E60000\"\n          radius={[10, 10, 0, 0]}\n          barSize={7}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n\nRenderBarChart.propTypes = {\n  activity: PropTypes.array,\n}\n"]},"metadata":{},"sourceType":"module"}