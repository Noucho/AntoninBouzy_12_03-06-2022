{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bouzy\\\\Desktop\\\\AntoninBouzy_12_03-06-22\\\\src\\\\components\\\\LineChart\\\\LineChart.js\",\n    _s = $RefreshSig$();\n\nimport { LineChart, XAxis, YAxis, Legend, Line, Tooltip } from 'recharts';\nimport CustomTooltip from './CustomTooltip';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n/**\n * A line chart showing user's average session, builded with recharts.\n * @Component\n * @param {*} props\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RenderLineChart(props) {\n  _s();\n\n  const [data, setData] = useState();\n  useEffect(() => {\n    setData(props.session);\n  }, [props.session]); // custom xAxis to match figma model\n\n  let daysArray = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];\n  let days = daysArray.map((day, index) => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: day\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"days\",\n      children: days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 258,\n      height: 263,\n      data: data,\n      margin: 0,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"day\",\n        axisLine: false,\n        tickLine: false,\n        type: \"category\",\n        hide: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        hide: true,\n        domain: ['dataMin -40', 'dataMax +30'],\n        tickLine: false,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        align: \"left\",\n        verticalAlign: \"top\",\n        iconSize: \"0\",\n        wrapperStyle: {\n          padding: '20px 0 10px 20px',\n          opacity: '50%',\n          lineHeight: '24px',\n          fontSize: '17px',\n          width: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this),\n        cursor: {\n          strokeWidth: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        padding: {\n          top: 0,\n          right: 0,\n          left: 0,\n          bottom: 0\n        },\n        name: \" \",\n        type: \"natural\",\n        dataKey: \"sessionLength\",\n        stroke: \"#FFF\",\n        dot: false,\n        activeDot: {\n          r: 3\n        },\n        strokeWidth: \"2px\",\n        opacity: 0.9\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RenderLineChart, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = RenderLineChart;\nRenderLineChart.propTypes = {\n  session: PropTypes.array\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderLineChart\");","map":{"version":3,"sources":["C:/Users/bouzy/Desktop/AntoninBouzy_12_03-06-22/src/components/LineChart/LineChart.js"],"names":["LineChart","XAxis","YAxis","Legend","Line","Tooltip","CustomTooltip","PropTypes","useState","useEffect","RenderLineChart","props","data","setData","session","daysArray","days","map","day","index","padding","opacity","lineHeight","fontSize","width","strokeWidth","top","right","left","bottom","r","propTypes","array"],"mappings":"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","sourcesContent":["import { LineChart, XAxis, YAxis, Legend, Line, Tooltip } from 'recharts'\nimport CustomTooltip from './CustomTooltip'\nimport PropTypes from 'prop-types'\nimport { useState, useEffect } from 'react'\n\n/**\n * A line chart showing user's average session, builded with recharts.\n * @Component\n * @param {*} props\n */\n\nexport default function RenderLineChart(props) {\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    setData(props.session)\n  }, [props.session])\n\n  // custom xAxis to match figma model\n  let daysArray = ['L', 'M', 'M', 'J', 'V', 'S', 'D']\n  let days = daysArray.map((day, index) => {\n    return <span key={index}>{day}</span>\n  })\n\n  return (\n    <>\n      <div className=\"days\">{days}</div>\n      <LineChart width={258} height={263} data={data} margin={0}>\n        <XAxis\n          dataKey=\"day\"\n          axisLine={false}\n          tickLine={false}\n          type=\"category\"\n          hide={true}\n        />\n        <YAxis\n          hide={true}\n          domain={['dataMin -40', 'dataMax +30']}\n          tickLine={false}\n          type=\"number\"\n        />\n        <Legend\n          align=\"left\"\n          verticalAlign=\"top\"\n          iconSize=\"0\"\n          wrapperStyle={{\n            padding: '20px 0 10px 20px',\n            opacity: '50%',\n            lineHeight: '24px',\n            fontSize: '17px',\n            width: '200px',\n          }}\n        />\n        <Tooltip\n          content={<CustomTooltip />}\n          cursor={{\n            strokeWidth: 0,\n          }}\n        />\n        <Line\n          padding={{\n            top: 0,\n            right: 0,\n            left: 0,\n            bottom: 0,\n          }}\n          name=\" \"\n          type=\"natural\"\n          dataKey=\"sessionLength\"\n          stroke=\"#FFF\"\n          dot={false}\n          activeDot={{ r: 3 }}\n          strokeWidth=\"2px\"\n          opacity={0.9}\n        />\n      </LineChart>\n    </>\n  )\n}\n\nRenderLineChart.propTypes = {\n  session: PropTypes.array,\n}\n"]},"metadata":{},"sourceType":"module"}