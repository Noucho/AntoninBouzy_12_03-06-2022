{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router'; // Fetch datas from backend NodeJS\n\n/**\n * GetUsersData includes the user id, user information (first name, last name and age),\n * the current day's score (todayScore) and key data (calorie, macronutrient, etc.).\n * @returns { object }\n */\n\nexport default function GetUsersData() {\n  _s();\n\n  const [data, setData] = useState();\n  const userId = parseInt(useParams().id);\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}`).then(res => {\n      return res.json();\n    }).then(obj => {\n      setData(obj.data);\n    });\n  }, [userId]);\n  return data;\n}\n/**\n * GetUsersActivity retrieves a user's activity day by day with kilograms and calories.\n * @returns { Array }\n */\n\n_s(GetUsersData, \"2kE4+An5d/7ko3e9VHmTM6VbSzY=\", false, function () {\n  return [useParams];\n});\n\n_c = GetUsersData;\nexport function GetUsersActivity() {\n  _s2();\n\n  const [data, setData] = useState();\n  const userId = parseInt(useParams().id);\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}/activity`).then(res => {\n      return res.json();\n    }).then(obj => {\n      setData(obj.data);\n    });\n  }, [userId]);\n  return data === null || data === void 0 ? void 0 : data.sessions;\n}\n/**\n * GetUsersAverageSession retrieves the average sessions of a user per day. The week starts on Monday.\n * @returns { Array }\n */\n\n_s2(GetUsersActivity, \"2kE4+An5d/7ko3e9VHmTM6VbSzY=\", false, function () {\n  return [useParams];\n});\n\n_c2 = GetUsersActivity;\nexport function GetUsersAverageSession() {\n  _s3();\n\n  const [data, setData] = useState();\n  const userId = parseInt(useParams().id);\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}/average-sessions`).then(res => {\n      return res.json();\n    }).then(obj => {\n      setData(obj.data);\n    });\n  }, [userId]);\n  return data === null || data === void 0 ? void 0 : data.sessions;\n}\n/**\n * GetUsersPerformances retrieves a user's performance (energy, endurance, etc.).\n * @returns { object }\n */\n\n_s3(GetUsersAverageSession, \"2kE4+An5d/7ko3e9VHmTM6VbSzY=\", false, function () {\n  return [useParams];\n});\n\n_c3 = GetUsersAverageSession;\nexport function GetUsersPerformances() {\n  _s4();\n\n  const [data, setData] = useState();\n  const userId = parseInt(useParams().id);\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}/performance`).then(res => {\n      return res.json();\n    }).then(obj => {\n      setData(obj.data);\n    });\n  }, [userId]);\n  return data;\n}\n\n_s4(GetUsersPerformances, \"2kE4+An5d/7ko3e9VHmTM6VbSzY=\", false, function () {\n  return [useParams];\n});\n\n_c4 = GetUsersPerformances;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GetUsersData\");\n$RefreshReg$(_c2, \"GetUsersActivity\");\n$RefreshReg$(_c3, \"GetUsersAverageSession\");\n$RefreshReg$(_c4, \"GetUsersPerformances\");","map":{"version":3,"sources":["C:/Users/bouzy/Desktop/AntoninBouzy_12_03-06-22/src/data/Data.js"],"names":["useState","useEffect","useParams","GetUsersData","data","setData","userId","parseInt","id","fetch","then","res","json","obj","GetUsersActivity","sessions","GetUsersAverageSession","GetUsersPerformances"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\n\n// Fetch datas from backend NodeJS\n\n/**\n * GetUsersData includes the user id, user information (first name, last name and age),\n * the current day's score (todayScore) and key data (calorie, macronutrient, etc.).\n * @returns { object }\n */\n\nexport default function GetUsersData() {\n  const [data, setData] = useState()\n  const userId = parseInt(useParams().id)\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}`)\n      .then((res) => {\n        return res.json()\n      })\n      .then((obj) => {\n        setData(obj.data)\n      })\n  }, [userId])\n\n  return data\n}\n\n/**\n * GetUsersActivity retrieves a user's activity day by day with kilograms and calories.\n * @returns { Array }\n */\n\nexport function GetUsersActivity() {\n  const [data, setData] = useState()\n  const userId = parseInt(useParams().id)\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}/activity`)\n      .then((res) => {\n        return res.json()\n      })\n      .then((obj) => {\n        setData(obj.data)\n      })\n  }, [userId])\n\n  return data?.sessions\n}\n\n/**\n * GetUsersAverageSession retrieves the average sessions of a user per day. The week starts on Monday.\n * @returns { Array }\n */\n\nexport function GetUsersAverageSession() {\n  const [data, setData] = useState()\n  const userId = parseInt(useParams().id)\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}/average-sessions`)\n      .then((res) => {\n        return res.json()\n      })\n      .then((obj) => {\n        setData(obj.data)\n      })\n  }, [userId])\n\n  return data?.sessions\n}\n\n/**\n * GetUsersPerformances retrieves a user's performance (energy, endurance, etc.).\n * @returns { object }\n */\n\nexport function GetUsersPerformances() {\n  const [data, setData] = useState()\n  const userId = parseInt(useParams().id)\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/user/${userId}/performance`)\n      .then((res) => {\n        return res.json()\n      })\n      .then((obj) => {\n        setData(obj.data)\n      })\n  }, [userId])\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}